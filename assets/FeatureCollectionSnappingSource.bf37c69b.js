import{y as n,r as c,e as r,d as i,n as l}from"./index.d90d4844.js";import{o as s}from"./queryEngineUtils.6646a5bd.js";import"./DimensioningAnalysisView3D.17111058.js";import"./LineVisualElement.6dace62e.js";import"./analysisViewUtils.80a36a20.js";import"./PointVisualElement.aa681768.js";import"./RightAngleQuadVisualElement.3e887bdf.js";import"./Segment.bc68cf19.js";import"./elevationInfoUtils.cdee1c92.js";import"./dragEventPipeline3D.92b60e9b.js";import"./EditGeometryOperations.b4e4ecae.js";import"./QueryEngineResult.5def21e8.js";import"./WhereClause.ecb0bafc.js";import"./json.8bd707cf.js";import"./dehydratedFeatureComparison.0839a103.js";let t=class extends n{constructor(e){super(e)}get availability(){return 1}refresh(){}async fetchCandidates(e,p){const o=this.layerSource.layer.source;return o.querySnapping?(await o.querySnapping({distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,query:c(e.filter)?e.filter.createQuery().toJSON():{where:"1=1"}},{signal:p})).candidates.map(a=>s(a,e.coordinateHelper,e.elevationInfo)):[]}};r([i({constructOnly:!0})],t.prototype,"layerSource",void 0),r([i({readOnly:!0})],t.prototype,"availability",null),t=r([l("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],t);export{t as FeatureCollectionSnappingSource};
