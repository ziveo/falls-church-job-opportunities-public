import{j$ as Q,az as S,jV as X,k0 as g,fW as Y,k1 as Z,k2 as tt,bE as et,aK as at,aM as nt,aN as st,k3 as it,k4 as rt,k5 as G,bK as x,k6 as ot,k7 as ct,k8 as ut,k9 as ht,ka as lt}from"./index.d90d4844.js";import{b as ft}from"./Segment.bc68cf19.js";const zt={readOnly:!0,get(){return Q(this.view)}};var F;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(F||(F={}));function K(t){if(!t)return null;if(Y(t)&&t.wkid){const e=Z[t.wkid];if(e)return e}if(t.wkt){const e=Mt(t.wkt);if(e)return e}return null}function Mt(t){const e=tt.exec(t);if(!e||e.length!==2)return null;const a=e[1].split(",");if(!a||a.length<3)return null;const n=parseFloat(a[1]),s=parseFloat(a[2]);return isNaN(n)||isNaN(s)?null:{a:n,f:s===0?0:1/s}}function pt(t){const e=K(t||et.WGS84);if(dt(e))return e;const a=e.a*(1-e.f);return Object.assign(e,{b:a,eSq:1-(a/e.a)**2,radius:(2*e.a+a)/3,densificationRatio:1e4/((2*e.a+a)/3)})}function dt(t){return"b"in t&&"eSq"in t&&"radius"in t}function mt(t){return K(t)!==null}function _t(t,e="meters"){if(!t)throw new S("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(n=>!mt(n.spatialReference)))throw new S("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const a=[];for(let n=0;n<t.length;n++){const s=t[n],{spatialReference:m}=s,v=s.type==="polyline"?s.paths:s.rings;let r=0;for(let b=0;b<v.length;b++){const o=v[b];let f=0;for(let M=1;M<o.length;M++){const $=o[M-1][0],z=o[M][0],_=o[M-1][1],u=o[M][1];if(_!==u||$!==z){const c={distance:null};gt(c,[$,_],[z,u],m),f+=c.distance}}r+=f}r=X(r,"meters",e),a.push(r)}return a}function gt(t,e,a,n){const s=e[0]*g,m=e[1]*g,v=a[0]*g,r=a[1]*g,{a:b,b:o,f,radius:M}=pt(n),$=v-s,z=Math.atan((1-f)*Math.tan(m)),_=Math.atan((1-f)*Math.tan(r)),u=Math.sin(z),c=Math.cos(z),k=Math.sin(_),h=Math.cos(_);let q,R,p,i,w,U,N,y,A,P,E=1e3,l=$;do{if(N=Math.sin(l),y=Math.cos(l),p=Math.sqrt(h*N*(h*N)+(c*k-u*h*y)*(c*k-u*h*y)),p===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;w=u*k+c*h*y,U=Math.atan2(p,w),A=c*h*N/p,R=1-A*A,i=w-2*u*k/R,isNaN(i)&&(i=0),P=f/16*R*(4+f*(4-3*R)),q=l,l=$+(1-P)*f*A*(U+P*p*(i+P*w*(2*i*i-1)))}while(Math.abs(l-q)>1e-12&&--E>0);if(E===0){const V=M,B=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-s))*V,D=v-s,H=Math.sin(D)*Math.cos(r),J=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(D),L=Math.atan2(H,J);return t.azimuth=L/g,t.distance=B,t.reverseAzimuth=void 0,t}const d=R*(b*b-o*o)/(o*o),j=d/1024*(256+d*(d*(74-47*d)-128)),W=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(U-j*p*(i+j/4*(w*(2*i*i-1)-j/6*i*(4*p*p-3)*(4*i*i-3)))),C=Math.atan2(h*Math.sin(l),c*k-u*h*Math.cos(l)),I=Math.atan2(c*Math.sin(l),c*k*Math.cos(l)-u*h);return t.azimuth=C/g,t.distance=W,t.reverseAzimuth=I/g,t}function Rt(t,e){if(at(e,0,0,0),t.length>0){for(let a=0;a<t.length;++a)nt(e,e,t[a]);st(e,e,1/t.length)}}function wt(t,e,a,n){n.projectToRenderScreen(t,O),n.projectToRenderScreen(e,T),it(a,bt,vt),rt(a,a)}const O=G(),vt=O,T=G(),bt=T;class Nt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=x(this._spatialReference,1),this._metersPerElevationUnit=x(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}function yt(t,e,a,n=2,s="abbr"){return ot(t,ft(e,a).value,a,n,s)}function At(t,e,a=2,n="abbr"){return ct(t,e.value,e.unit,a,n)}function Pt(t,e,a=2,n="abbr"){return ut(t,e.value,e.unit,a,n)}function Ut(t,e,a=2,n="abbr"){return ht(t,e.value,e.unit,a,n)}function jt(t,e,a=2,n="abbr"){return lt(t,e.value,e.unit,a,n)}export{mt as M,Ut as a,At as b,Rt as c,F as e,yt as g,wt as i,jt as j,zt as r,Nt as t,Pt as w,_t as y,gt as z};
